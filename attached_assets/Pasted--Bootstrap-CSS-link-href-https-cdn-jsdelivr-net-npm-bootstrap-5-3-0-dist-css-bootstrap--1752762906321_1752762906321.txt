<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Modal de Tarefa -->
<div class="modal fade" id="modalTarefa" tabindex="-1" aria-labelledby="modalTarefaLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header border-0">
        <h5 class="modal-title fw-bold" id="modalTarefaLabel">Criar Tarefa</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
      </div>
      <div class="modal-body">

        <div class="mb-3">
          <label for="tituloTarefa" class="form-label fw-semibold">Título</label>
          <input type="text" class="form-control" id="tituloTarefa" placeholder="Ex: Confirmar pacote com cliente">
        </div>

        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="clienteTarefa" class="form-label fw-semibold">Cliente</label>
            <select class="form-select" id="clienteTarefa">
              <option selected disabled>Selecione um cliente</option>
            </select>
          </div>
          <div class="col-md-6 mb-3">
            <label for="responsavelTarefa" class="form-label fw-semibold">Responsável</label>
            <select class="form-select" id="responsavelTarefa">
              <option selected disabled>Selecione um usuário</option>
            </select>
          </div>
        </div>

        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="situacaoTarefa" class="form-label fw-semibold">Situação</label>
            <select class="form-select" id="situacaoTarefa">
              <option value="open">Aberta</option>
              <option value="concluded">Concluída</option>
              <option value="archived">Arquivada</option>
            </select>
          </div>
          <div class="col-md-6 mb-3">
            <label for="categoriaTarefa" class="form-label fw-semibold">Categoria</label>
            <select class="form-select" id="categoriaTarefa">
              <option selected disabled>Selecione</option>
            </select>
          </div>
        </div>

        <div class="mb-3">
          <label for="dataTarefa" class="form-label fw-semibold">Data de Vencimento</label>
          <input type="date" class="form-control" id="dataTarefa">
        </div>

        <div class="mb-3">
          <label for="descricaoTarefa" class="form-label fw-semibold">Descrição</label>
          <textarea class="form-control" id="descricaoTarefa" rows="4" placeholder="Descreva os detalhes da tarefa..."></textarea>
        </div>

      </div>
      <div class="modal-footer border-0">
        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" onclick="salvarTarefa()">Salvar Tarefa</button>
      </div>
    </div>
  </div>
</div>

<!-- Scripts + Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
const API_URL = "https://SEU_SERVIDOR_MONDE/api/v2";
const JWT = "SEU_TOKEN_JWT";

// Carregar dados nos selects
async function carregarDadosTarefa() {
  const headers = { Authorization: `Bearer ${JWT}` };

  const [clientesRes, usuariosRes, categoriasRes] = await Promise.all([
    fetch(`${API_URL}/clients`, { headers }),
    fetch(`${API_URL}/users`, { headers }),
    fetch(`${API_URL}/task_categories`, { headers })
  ]);

  const clientes = await clientesRes.json();
  const usuarios = await usuariosRes.json();
  const categorias = await categoriasRes.json();

  preencherSelect('clienteTarefa', clientes, 'id', 'name');
  preencherSelect('responsavelTarefa', usuarios, 'id', 'name');
  preencherSelect('categoriaTarefa', categorias, 'id', 'name');
}

function preencherSelect(id, dados, valKey, textKey) {
  const select = document.getElementById(id);
  dados.forEach(d => {
    const opt = document.createElement('option');
    opt.value = d[valKey];
    opt.textContent = d[textKey];
    select.appendChild(opt);
  });
}

// Salvar tarefa
async function salvarTarefa() {
  const payload = {
    title: document.getElementById('tituloTarefa').value,
    client_id: document.getElementById('clienteTarefa').value,
    user_id: document.getElementById('responsavelTarefa').value,
    status: document.getElementById('situacaoTarefa').value,
    category_id: document.getElementById('categoriaTarefa').value,
    due_date: document.getElementById('dataTarefa').value,
    description: document.getElementById('descricaoTarefa').value
  };

  const res = await fetch(`${API_URL}/tasks`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${JWT}`
    },
    body: JSON.stringify(payload)
  });

  if (res.ok) {
    alert("Tarefa criada com sucesso!");
    location.reload();
  } else {
    const erro = await res.json();
    alert("Erro ao salvar: " + (erro.message || "Verifique os campos"));
  }
}

// Carrega os dados ao abrir a modal
document.getElementById('modalTarefa').addEventListener('shown.bs.modal', carregarDadosTarefa);
</script>
